---
name: "TDD: Write Tests First"
description: "Generate unit/integration tests up front."
variables:
  - name: feature
    description: "Feature name"
  - name: language
    description: "Language/framework (e.g., Python/PyTest/FastAPI)"
  - name: contracts
    description: "APIs, schemas, DB contracts to test"
  - name: edge_cases
    description: "Known edge cases, failure modes"
---
For **{{feature}}**, write **tests first** in {{language}}.

Test scope:
- Unit tests for core logic
- Integration tests for APIs/DB/queues
- Contract tests for {{contracts}}
- Edge cases: {{edge_cases}} (negative/abuse cases included)
- Performance/smoke tests (where reasonable) with numeric targets

Output runnable test files with clear names, fixtures/mocks, and comments. Assume production standards (linting, CI).

Quality bars (set explicitly in tests/config):
- Coverage threshold: e.g., lines ≥ 85%, branches ≥ 75% (override if justified)
- Deterministic tests with seeded randomness; stable fixtures
- Property-based or fuzz tests for parsers/validators where applicable
- Performance smoke: ensure typical scenario ≤ target p95 latency and within CPU/memory budget
