---
name: "Design Doc (Concise, FAANG-Style)"
description: "Draft a technical design doc for a feature/system."
variables:
  - name: feature
    description: "Feature or system name"
  - name: context
    description: "Business objective, users, success metrics"
  - name: integrations
    description: "Upstream/downstream systems, contracts"
  - name: stack
    description: "Languages, frameworks, data stores, infra"
  - name: constraints
    description: "SLOs, privacy, compliance, costs"
---
Draft a concise design doc for **{{feature}}**.

**Context:** {{context}}
**Stack:** {{stack}}
**Integrations:** {{integrations}}
**Constraints:** {{constraints}}

Include only these sections:
- Overview (1â€“2 paragraphs)
- Architecture diagram (ASCII) + callouts
- Components (APIs, data models, storage, queues)
- Data flows & contracts (schemas, versioning, idempotency, pagination, rate limits, error schema)
- Non-functional: scale, latency, reliability, security, privacy, availability, cost budget
- Risks & mitigations
- Rollout plan & success metrics

Must specify (numeric where possible):
- Performance: target throughput, p50/p95/p99 latency, concurrency limits, CPU/memory budgets
- Reliability: availability target, error budget, retry/backoff, idempotency keys
- Security & privacy: data classification, PII handling, retention/deletion, access controls, secrets management
- Compatibility: API versioning strategy and deprecation policy, schema evolution plan and migrations/backfills
- Observability: required logs (fields), metrics (names/labels), and traces for critical paths
- Cost model: expected infra/storage costs and cost guardrails
Keep it crisp and decision-oriented.
